(function() {var implementors = {};
implementors["cometd"] = [{"text":"impl !RefUnwindSafe for CometError","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Context","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DefaultHandler","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !RefUnwindSafe for Client&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Advice","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Packet","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Reconnect","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Channel","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ConnectionType","synthetic":true,"types":[]}];
implementors["kahoot"] = [{"text":"impl RefUnwindSafe for LoginResponse","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Client","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ProbeResult","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GetChallengeJsonResponse","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SendDuccError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DecodeError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SendDuccErrorKind","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DecodeTokenError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for DefaultHandler","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Context","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !RefUnwindSafe for Client&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for KahootError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GetReadyMessage","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StartQuestionMessage","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GameOverMessage","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TimeUpMessage","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for PlayAgainMessage","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RevealAnswerMessage","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RevealAnswerMessagePointsData","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RevealAnswerMessagePointsDataAnswerStreakPoints","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for StartQuizMessage","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for FeedbackMessage","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RevealRankingMessage","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for UsernameAcceptedMessage","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Message","synthetic":true,"types":[]}];
implementors["kahoot_finder"] = [{"text":"impl RefUnwindSafe for ProbeHandler","synthetic":true,"types":[]}];
implementors["kahoot_swarm"] = [{"text":"impl !RefUnwindSafe for BotHandler","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for TaskMessage","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Swarm","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for TaskMessageData","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()