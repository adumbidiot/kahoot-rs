(function() {var implementors = {};
implementors["cometd"] = [{"text":"impl Send for CometError","synthetic":true,"types":[]},{"text":"impl Send for Context","synthetic":true,"types":[]},{"text":"impl Send for DefaultHandler","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for Client&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send + Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Advice","synthetic":true,"types":[]},{"text":"impl Send for Packet","synthetic":true,"types":[]},{"text":"impl Send for Reconnect","synthetic":true,"types":[]},{"text":"impl Send for Channel","synthetic":true,"types":[]},{"text":"impl Send for ConnectionType","synthetic":true,"types":[]}];
implementors["kahoot"] = [{"text":"impl Send for LoginResponse","synthetic":true,"types":[]},{"text":"impl Send for Client","synthetic":true,"types":[]},{"text":"impl Send for ProbeResult","synthetic":true,"types":[]},{"text":"impl Send for GetChallengeJsonResponse","synthetic":true,"types":[]},{"text":"impl Send for SendDuccError","synthetic":true,"types":[]},{"text":"impl Send for DecodeError","synthetic":true,"types":[]},{"text":"impl Send for SendDuccErrorKind","synthetic":true,"types":[]},{"text":"impl Send for DecodeTokenError","synthetic":true,"types":[]},{"text":"impl Send for DefaultHandler","synthetic":true,"types":[]},{"text":"impl Send for Context","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for Client&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send + Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for KahootError","synthetic":true,"types":[]},{"text":"impl Send for GetReadyMessage","synthetic":true,"types":[]},{"text":"impl Send for StartQuestionMessage","synthetic":true,"types":[]},{"text":"impl Send for GameOverMessage","synthetic":true,"types":[]},{"text":"impl Send for TimeUpMessage","synthetic":true,"types":[]},{"text":"impl Send for PlayAgainMessage","synthetic":true,"types":[]},{"text":"impl Send for RevealAnswerMessage","synthetic":true,"types":[]},{"text":"impl Send for RevealAnswerMessagePointsData","synthetic":true,"types":[]},{"text":"impl Send for RevealAnswerMessagePointsDataAnswerStreakPoints","synthetic":true,"types":[]},{"text":"impl Send for StartQuizMessage","synthetic":true,"types":[]},{"text":"impl Send for FeedbackMessage","synthetic":true,"types":[]},{"text":"impl Send for RevealRankingMessage","synthetic":true,"types":[]},{"text":"impl Send for UsernameAcceptedMessage","synthetic":true,"types":[]},{"text":"impl Send for Message","synthetic":true,"types":[]}];
implementors["kahoot_finder"] = [{"text":"impl Send for ProbeHandler","synthetic":true,"types":[]}];
implementors["kahoot_swarm"] = [{"text":"impl Send for BotHandler","synthetic":true,"types":[]},{"text":"impl Send for TaskMessage","synthetic":true,"types":[]},{"text":"impl Send for Swarm","synthetic":true,"types":[]},{"text":"impl Send for TaskMessageData","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()