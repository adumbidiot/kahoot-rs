(function() {var implementors = {};
implementors["cometd"] = [{"text":"impl Sync for CometError","synthetic":true,"types":[]},{"text":"impl Sync for Context","synthetic":true,"types":[]},{"text":"impl Sync for DefaultHandler","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for Client&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send + Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for Advice","synthetic":true,"types":[]},{"text":"impl Sync for Packet","synthetic":true,"types":[]},{"text":"impl Sync for Reconnect","synthetic":true,"types":[]},{"text":"impl Sync for Channel","synthetic":true,"types":[]},{"text":"impl Sync for ConnectionType","synthetic":true,"types":[]}];
implementors["kahoot"] = [{"text":"impl Sync for LoginResponse","synthetic":true,"types":[]},{"text":"impl Sync for Client","synthetic":true,"types":[]},{"text":"impl Sync for ProbeResult","synthetic":true,"types":[]},{"text":"impl Sync for GetChallengeJsonResponse","synthetic":true,"types":[]},{"text":"impl Sync for SendDuccError","synthetic":true,"types":[]},{"text":"impl Sync for DecodeError","synthetic":true,"types":[]},{"text":"impl Sync for SendDuccErrorKind","synthetic":true,"types":[]},{"text":"impl Sync for DecodeTokenError","synthetic":true,"types":[]},{"text":"impl Sync for DefaultHandler","synthetic":true,"types":[]},{"text":"impl Sync for Context","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for Client&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send + Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for KahootError","synthetic":true,"types":[]},{"text":"impl Sync for GetReadyMessage","synthetic":true,"types":[]},{"text":"impl Sync for StartQuestionMessage","synthetic":true,"types":[]},{"text":"impl Sync for GameOverMessage","synthetic":true,"types":[]},{"text":"impl Sync for TimeUpMessage","synthetic":true,"types":[]},{"text":"impl Sync for PlayAgainMessage","synthetic":true,"types":[]},{"text":"impl Sync for RevealAnswerMessage","synthetic":true,"types":[]},{"text":"impl Sync for RevealAnswerMessagePointsData","synthetic":true,"types":[]},{"text":"impl Sync for RevealAnswerMessagePointsDataAnswerStreakPoints","synthetic":true,"types":[]},{"text":"impl Sync for StartQuizMessage","synthetic":true,"types":[]},{"text":"impl Sync for FeedbackMessage","synthetic":true,"types":[]},{"text":"impl Sync for RevealRankingMessage","synthetic":true,"types":[]},{"text":"impl Sync for UsernameAcceptedMessage","synthetic":true,"types":[]},{"text":"impl Sync for Message","synthetic":true,"types":[]}];
implementors["kahoot_finder"] = [{"text":"impl Sync for ProbeHandler","synthetic":true,"types":[]}];
implementors["kahoot_swarm"] = [{"text":"impl Sync for BotHandler","synthetic":true,"types":[]},{"text":"impl Sync for TaskMessage","synthetic":true,"types":[]},{"text":"impl Sync for Swarm","synthetic":true,"types":[]},{"text":"impl Sync for TaskMessageData","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()